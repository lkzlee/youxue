<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.youxue.core.dao.NewsDao" >
  <resultMap id="BaseResultMap" type="com.youxue.core.vo.NewsVo" >
    <id column="news_id" property="newsId" jdbcType="VARCHAR" />
    <result column="news_title" property="newsTitle" jdbcType="VARCHAR" />
    <result column="news_content" property="newsContent" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    news_id, news_title, news_content, create_time, update_time,author
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tb_news
    where news_id = #{newsId,jdbcType=VARCHAR}
  </select>
  <select id="selectByPage" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from tb_news
    order by create_time desc
  </select>
  <select id="selectCountByPage" resultType="Integer" parameterType="java.util.Map" >
    select count(1)
    from tb_news
    order by create_time desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tb_news
    where news_id = #{newsId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.youxue.core.vo.NewsVo" >
    insert into tb_news (news_id, news_title, news_content, 
      create_time, update_time,author)
    values (#{newsId,jdbcType=VARCHAR}, #{newsTitle,jdbcType=VARCHAR}, #{newsContent,jdbcType=VARCHAR},  #{author,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.youxue.core.vo.NewsVo" >
    insert into tb_news
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="newsId != null" >
        news_id,
      </if>
      <if test="newsTitle != null" >
        news_title,
      </if>
      <if test="newsContent != null" >
        news_content,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="author != null" >
        author,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="newsId != null" >
        #{newsId,jdbcType=VARCHAR},
      </if>
      <if test="newsTitle != null" >
        #{newsTitle,jdbcType=VARCHAR},
      </if>
      <if test="newsContent != null" >
        #{newsContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.youxue.core.vo.NewsVo" >
    update tb_news
    <set >
      <if test="newsTitle != null" >
        news_title = #{newsTitle,jdbcType=VARCHAR},
      </if>
      <if test="newsContent != null" >
        news_content = #{newsContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
    </set>
    where news_id = #{newsId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.youxue.core.vo.NewsVo" >
    update tb_news
    set news_title = #{newsTitle,jdbcType=VARCHAR},
      news_content = #{newsContent,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where news_id = #{newsId,jdbcType=VARCHAR}
  </update>
</mapper>