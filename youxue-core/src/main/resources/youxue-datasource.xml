<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.directwebremoting.org/schema/spring-dwr http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="name">
			<value>${jdbc-1.druid.dsName}</value>
		</property>
		<property name="driverClassName">
			<value>${jdbc-1.druid.driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc-1.druid.url}</value>
		</property>
		<property name="username">
			<value>${jdbc-1.user}</value>
		</property>
		<property name="password">
			<value>${jdbc-1.password}</value>
		</property>
		<property name="initialSize">
			<value>${jdbc-1.druid.initialSize}</value>
		</property>
		<property name="minIdle">
			<value>${jdbc-1.druid.minIdle}</value>
		</property>
		<property name="maxActive">
			<value>${jdbc-1.druid.maxActive}</value>
		</property>
		<property name="validationQuery">
			<value>${jdbc-1.druid.validationQuery}</value>
		</property>
	
		<!-- 连接保活策略，对于空闲超过1分钟的连接，在申请连接时validate -->
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${jdbc-1.druid.poolPreparedStatements}" />
		<property name="maxOpenPreparedStatements" value="${jdbc-1.druid.maxOpenPreparedStatements}" />

		<property name="timeBetweenLogStatsMillis" value="${jdbc-1.druid.timeBetweenLogStatsMillis}" />
		<property name="proxyFilters">
			<list>
				<ref bean="logFilterMain" />
				<ref bean="statFilterMain" />
			</list>
		</property>
	</bean>
		
	<!-- 开启统计信息的过滤器 -->
	<bean id="statFilterMain" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="logSlowSql" value="${jdbc-1.druid.logSlowSql}" />
		<property name="slowSqlMillis" value="${jdbc-1.druid.slowSqlMillis}" />
		<property name="mergeSql" value="${jdbc-1.druid.mergeSql}" />
	</bean>
	<!-- 开启JDBC日志记录的过滤器，如果要在日志中显示还必须配置druid.sql.DataSource、druid.sql.Connection、druid.sql.Statement、druid.sql.ResultSet这四个logger的一种或多种 -->
	<bean id="logFilterMain" class="com.alibaba.druid.filter.logging.Log4jFilter">
		<property name="dataSourceLogEnabled" value="${jdbc-1.druid.dataSourceLogEnabled}" />
		<property name="connectionLogEnabled" value="${jdbc-1.druid.connectionLogEnabled}" />
		<property name="connectionLogErrorEnabled" value="${jdbc-1.druid.connectionLogErrorEnabled}" />
		<property name="statementLogEnabled" value="${jdbc-1.druid.statementLogEnabled}" />
		<property name="statementLogErrorEnabled" value="${jdbc-1.druid.statementLogErrorEnabled}" />
		<property name="resultSetLogEnabled" value="${jdbc-1.druid.resultSetLogEnabled}" />
		<property name="resultSetLogErrorEnabled" value="${jdbc-1.druid.resultSetLogErrorEnabled}" />
	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 配置夺宝Ibatis的client -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation">
			<value>classpath:SqlMapConfig.xml</value>
		</property>
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
</beans>